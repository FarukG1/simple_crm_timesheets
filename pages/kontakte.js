// Default imports
import Head from "next/head";
import styles from "../styles/Home.module.css";
import toolbar from "../styles/Toolbar.module.css";
import NavBar from "../components/navbar";
import clientPromise from "../lib/mongodb";
import Modal from "react-modal";
import { useState } from "react";

// Page specific imports
import CustomerList from "../components/list/customer";
import CaregiverList from "../components/list/caregiver";
import FormNewContact from "../components/formular/contact/new";
import FormEditContact from "../components/formular/contact/edit";
import FormDeleteContact from "../components/formular/contact/delete";

export default function Kontakte({ customers, caregivers }) {
  const [ModalState, setModalState] = useState({ value: false, modal: "new" });
  const [listType, setListType] = useState("customer");
  const [query, setQuery] = useState("");
  const [sendQuery, setSendQuery] = useState("");
  const customStyles = {
    overlay: {
      backgroundColor: "rgba(0, 0, 0, 0.6)",
    },
    content: {
      top: "50%",
      left: "50%",
      right: "auto",
      bottom: "auto",
      marginRight: "-50%",
      transform: "translate(-50%, -50%)",
      width: "50%",
    },
  };

  return (
    <>
      <Head>
        <title>Kontakte</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <NavBar page="kontakte" />
      <main className={styles.main}>
        <div className={toolbar.container}>
          <div className={toolbar.buttonContainer}>
            <div className={toolbar.searchContainer}>
              <div className={toolbar.textInput}>
                <input
                  type="text"
                  placeholder="Nach Einträgen suchen..."
                  onChange={(event) => setQuery(event.target.value)}
                />
              </div>
              <button
                className={toolbar.searchButton}
                onClick={() => setSendQuery(query)}
              >
                Suchen
              </button>
            </div>
            <div className={toolbar.buttons}>
              <select
                className={toolbar.selectButton}
                defaultValue={listType}
                onClick={(event) => setListType(event.target.value)}
              >
                <option value="customer">Kunden</option>
                <option value="caregiver">Pflegekraft</option>
              </select>
              <button
                className={toolbar.newButton}
                onClick={() => setModalState({ value: true, state: "new" })}
              >
                + Neu
              </button>
              <button
                className={toolbar.editButton}
                onClick={() => setModalState({ value: true, state: "edit" })}
              >
                Bearbeiten
              </button>
              <button
                className={toolbar.deleteButton}
                onClick={() => setModalState({ value: true, state: "delete" })}
              >
                Löschen
              </button>
            </div>
          </div>
        </div>
        {listType == "customer" && (
          <CustomerList customers={customers} query={query} />
        )}
        {listType == "caregiver" && (
          <CaregiverList caregivers={caregivers} query={query} />
        )}
        <Modal
          isOpen={ModalState.value}
          onRequestClose={() => setModalState({ value: false, state: "" })}
          style={customStyles}
          ariaHideApp={false}
        >
          {ModalState.state == "new" && <FormNewContact />}
          {ModalState.state == "edit" && (
            <FormEditContact customers={customers} caregivers={caregivers} />
          )}
          {ModalState.state == "delete" && (
            <FormDeleteContact customers={customers} caregivers={caregivers} />
          )}
        </Modal>
      </main>
    </>
  );
}

export async function getServerSideProps() {
  try {
    const client = await clientPromise;
    const db = client.db("swe-projekt");

    const customers = await db
      .collection("kunde")
      .find({})
      .sort({ lastname: 1 })
      .toArray();

    const caregivers = await db
      .collection("pflegekraft")
      .find({})
      .sort({ lastname: 1 })
      .toArray();

    return {
      props: {
        customers: JSON.stringify(customers),
        caregivers: JSON.stringify(caregivers),
      },
    };
  } catch (e) {
    console.error(e);
  }
}
